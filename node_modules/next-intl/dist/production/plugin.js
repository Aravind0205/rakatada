"use strict";var n=require("fs"),e=require("path");function t(n){return n&&n.__esModule?n:{default:n}}var i=t(n),r=t(e);function o(n,e){return null!=(null==e?void 0:e.i18n)&&console.warn("\nnext-intl has found an `i18n` config in your next.config.js. This likely causes conflicts and should therefore be removed if you use the App Router.\n\nIf you're in progress of migrating from the `pages` folder, you can refer to this example: https://github.com/amannn/next-intl/tree/feat/next-13-rsc/packages/example-next-13-with-pages\n"),Object.assign({},e,{webpack(){for(var t=arguments.length,o=new Array(t),s=0;s<t;s++)o[s]=arguments[s];let[a,l]=o;return a.resolve.alias["next-intl/config"]=require.resolve(function(n){let e=n;if(e){if(e=r.default.resolve(e),!i.default.existsSync(e))throw new Error("Could not find i18n config at ".concat(e,", please provide a valid path."))}else if(e=["./i18n.tsx","./i18n.ts","./i18n.js","./i18n.jsx","./src/i18n.tsx","./src/i18n.ts","./src/i18n.js","./src/i18n.jsx"].map((n=>r.default.resolve(n))).find((n=>i.default.existsSync(n))),!e)throw new Error("\n\nCould not locate i18n config. Create one at `./(src/)i18n.{js,jsx,ts,tsx}` or specify a custom location:\n\nconst withNextIntl = require('next-intl/plugin')(\n  './path/to/i18n.tsx'\n);\n\nmodule.exports = withNextIntl({\n  // Other Next.js configuration ...\n});\n");return e}(n)),"function"==typeof(null==e?void 0:e.webpack)?e.webpack(a,l):a}})}module.exports=function(n){return e=>o(n,e)},module.exports.initPlugin=o;
