declare const getConfig: (locale: string) => Promise<Omit<{
    locale: string;
    now: Date;
    formats?: Partial<import("use-intl/dist/types/src/core/Formats").default> | undefined;
    timeZone?: import("use-intl/dist/types/src/core/TimeZone").default | undefined;
    onError?: ((error: import("use-intl/core").IntlError) => void) | undefined;
    getMessageFallback?: ((info: {
        error: import("use-intl/core").IntlError;
        key: string;
        namespace?: string | undefined;
    }) => string) | undefined;
    messages?: import("use-intl/dist/types/src/core/AbstractIntlMessages").default | undefined;
    defaultTranslationValues?: import("use-intl/core").RichTranslationValues | undefined;
}, "onError" | "getMessageFallback" | "messages"> & {
    messages: import("use-intl/dist/types/src/core/AbstractIntlMessages").default | undefined;
    onError: typeof import("use-intl/dist/types/src/core/defaults").defaultOnError;
    getMessageFallback: (info: {
        error: import("use-intl/core").IntlError;
        key: string;
        namespace?: string | undefined;
    }) => string;
}>;
export default getConfig;
