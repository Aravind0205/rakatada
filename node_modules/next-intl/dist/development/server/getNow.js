'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var getConfig = require('./getConfig.js');
var getLocaleFromHeader = require('./getLocaleFromHeader.js');

let hasWarnedForMissingLocale = false;
let hasWarnedForObjectArgument = false;
const getNow = React.cache(async locale => {
  if (typeof locale === 'object') {
    locale = locale.locale;
    if (!hasWarnedForObjectArgument) {
      hasWarnedForObjectArgument = true;
      console.warn("\nDEPRECATION WARNING: Calling `getNow` with an object argument is deprecated, please update your call site accordingly.\n\n// Previously\ngetNow({locale: 'en'});\n\n// Now\ngetNow('en');\n\nSee also https://next-intl-docs.vercel.app/docs/environments/metadata-route-handlers\n");
    }
  }
  if (!locale) {
    locale = getLocaleFromHeader.default();
    if (!hasWarnedForMissingLocale) {
      hasWarnedForMissingLocale = true;
      console.warn("\nCalling `getNow` without a locale is deprecated, please update the call:\n\n// app/[locale]/layout.tsx\nexport async function generateMetadata({params}) {\n  const t = await getNow(params.locale);\n\n  // ...\n}\n\nLearn more: https://next-intl-docs.vercel.app/docs/environments/metadata-route-handlers\n");
    }
  }
  const config = await getConfig.default(locale);
  return config.now;
});
var getNow$1 = getNow;

exports.default = getNow$1;
