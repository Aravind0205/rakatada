import n from"fs";import e from"path";function t(t,i){return null!=(null==i?void 0:i.i18n)&&console.warn("\nnext-intl has found an `i18n` config in your next.config.js. This likely causes conflicts and should therefore be removed if you use the App Router.\n\nIf you're in progress of migrating from the `pages` folder, you can refer to this example: https://github.com/amannn/next-intl/tree/feat/next-13-rsc/packages/example-next-13-with-pages\n"),Object.assign({},i,{webpack(){for(var o=arguments.length,r=new Array(o),s=0;s<o;s++)r[s]=arguments[s];let[l,a]=r;return l.resolve.alias["next-intl/config"]=require.resolve(function(t){let i=t;if(i){if(i=e.resolve(i),!n.existsSync(i))throw new Error("Could not find i18n config at ".concat(i,", please provide a valid path."))}else if(i=["./i18n.tsx","./i18n.ts","./i18n.js","./i18n.jsx","./src/i18n.tsx","./src/i18n.ts","./src/i18n.js","./src/i18n.jsx"].map((n=>e.resolve(n))).find((e=>n.existsSync(e))),!i)throw new Error("\n\nCould not locate i18n config. Create one at `./(src/)i18n.{js,jsx,ts,tsx}` or specify a custom location:\n\nconst withNextIntl = require('next-intl/plugin')(\n  './path/to/i18n.tsx'\n);\n\nmodule.exports = withNextIntl({\n  // Other Next.js configuration ...\n});\n");return i}(t)),"function"==typeof(null==i?void 0:i.webpack)?i.webpack(l,a):l}})}module.exports=function(n){return e=>t(n,e)},module.exports.initPlugin=t;
