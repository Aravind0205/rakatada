import{match as t}from"@formatjs/intl-localematcher";import o from"negotiator";import{COOKIE_LOCALE_NAME as e}from"../shared/constants.js";import{getLocaleFromPathname as n,isLocaleSupportedOnDomain as a,getHost as l}from"./utils.js";function c(a,l,c,i){let r,{defaultLocale:s,localeDetection:u,locales:f}=a;if(i){const t=n(i);f.includes(t)&&(r=t)}if(!r&&u&&c&&c.has(e)){var d;const t=null===(d=c.get(e))||void 0===d?void 0:d.value;t&&f.includes(t)&&(r=t)}return!r&&u&&l&&(r=function(e,n,a){let l;const c=new o({headers:{"accept-language":e.get("accept-language")||void 0}}).languages();try{l=t(c,n,a)}catch(t){}return l}(l,f,s)),r||(r=s),r}function i(t,o,e,n){const{domains:i}=t,r=c(t,o,e,n);if(i){const t=function(t,o){var e;let n=l(t);if(n=null===(e=n)||void 0===e?void 0:e.replace(/:\d+$/,""),n&&o)return o.find((t=>t.domain===n))}(o,i),e=n&&n.startsWith("/".concat(r));if(t)return{locale:a(r,t)||e?r:t.defaultLocale,domain:t}}return{locale:r}}function r(t,o,e,n){return t.domains?i(t,o,e,n):{locale:c(t,o,e,n)}}export{r as default};
